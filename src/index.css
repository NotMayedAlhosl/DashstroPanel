@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Space station deep background */
    --background: 220 30% 8%;
    --foreground: 200 100% 95%;

    /* Card surfaces with subtle glow */
    --card: 220 25% 12%;
    --card-foreground: 200 100% 95%;

    --popover: 220 30% 10%;
    --popover-foreground: 200 100% 95%;

    /* Quantum cyan primary */
    --primary: 190 100% 50%;
    --primary-foreground: 220 30% 10%;

    /* Purple quantum state */
    --secondary: 270 80% 60%;
    --secondary-foreground: 200 100% 95%;

    /* Muted elements */
    --muted: 220 20% 20%;
    --muted-foreground: 200 30% 60%;

    /* Accent glow */
    --accent: 280 100% 70%;
    --accent-foreground: 220 30% 10%;

    /* Alert colors */
    --destructive: 10 80% 55%;
    --destructive-foreground: 200 100% 95%;

    /* Success/stable */
    --success: 150 80% 45%;
    --success-foreground: 220 30% 10%;

    /* Warning */
    --warning: 35 100% 55%;
    --warning-foreground: 220 30% 10%;

    /* Borders with quantum glow */
    --border: 190 60% 25%;
    --input: 220 25% 18%;
    --ring: 190 100% 50%;

    --radius: 0.75rem;

    /* Quantum gradients */
    --gradient-quantum: linear-gradient(135deg, hsl(190 100% 50%) 0%, hsl(270 80% 60%) 100%);
    --gradient-space: linear-gradient(180deg, hsl(220 30% 8%) 0%, hsl(230 40% 12%) 100%);
    --gradient-glow: radial-gradient(circle at center, hsl(190 100% 50% / 0.15) 0%, transparent 70%);

    /* Glow effects */
    --glow-primary: 0 0 20px hsl(190 100% 50% / 0.5);
    --glow-secondary: 0 0 20px hsl(270 80% 60% / 0.5);
    --glow-success: 0 0 15px hsl(150 80% 45% / 0.5);
    --glow-warning: 0 0 15px hsl(35 100% 55% / 0.5);

    /* Animations */
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);

    /* High-contrast mode */
    --hc-background: 0 0% 0%;
    --hc-foreground: 0 0% 100%;
    --hc-primary: 220 100% 60%;
    --hc-success: 120 100% 40%;
    --hc-warning: 40 100% 60%;
    --hc-destructive: 0 100% 50%;

    /* Color-blind palette */
    --cb-primary: 200 100% 45%;
    --cb-success: 60 100% 45%;
    --cb-warning: 30 100% 55%;
    --cb-destructive: 0 80% 55%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}

/* Focus styles for accessibility */
:focus {
  outline: 2px solid hsl(var(--primary));
  outline-offset: 2px;
}

/* Enlarge small labels */
.text-xs, .text-sm {
  font-size: 1rem !important;
  letter-spacing: 0.01em;
}

/* High-contrast/Color-blind mode toggles (to be toggled via JS/class) */
body.high-contrast {
  background: hsl(var(--hc-background));
  color: hsl(var(--hc-foreground));
}
body.high-contrast .bg-background { background: hsl(var(--hc-background)); }
body.high-contrast .text-foreground { color: hsl(var(--hc-foreground)); }
body.high-contrast .bg-primary { background: hsl(var(--hc-primary)); }
body.high-contrast .text-primary { color: hsl(var(--hc-primary)); }
body.high-contrast .bg-success { background: hsl(var(--hc-success)); }
body.high-contrast .text-success { color: hsl(var(--hc-success)); }
body.high-contrast .bg-warning { background: hsl(var(--hc-warning)); }
body.high-contrast .text-warning { color: hsl(var(--hc-warning)); }
body.high-contrast .bg-destructive { background: hsl(var(--hc-destructive)); }
body.high-contrast .text-destructive { color: hsl(var(--hc-destructive)); }

body.color-blind .bg-primary { background: hsl(var(--cb-primary)); }
body.color-blind .text-primary { color: hsl(var(--cb-primary)); }
body.color-blind .bg-success { background: hsl(var(--cb-success)); }
body.color-blind .text-success { color: hsl(var(--cb-success)); }
body.color-blind .bg-warning { background: hsl(var(--cb-warning)); }
body.color-blind .text-warning { color: hsl(var(--cb-warning)); }
body.color-blind .bg-destructive { background: hsl(var(--cb-destructive)); }
body.color-blind .text-destructive { color: hsl(var(--cb-destructive)); }
